# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: PR Check

on:
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  REPOSITORY_URL: github.com/${{ github.repository }}
  IMAGE_NAME_PASS_IMAGES_API:  ${{ github.repository_owner }}/sdlc-gitops-sample-stack/pass-image-api

jobs:

  build-pass-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: cd apps/pass-api && go build -v ./...

    - name: Test
      run: cd apps/pass-api && go test -v ./...

  build-pass-summary-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'

    - name: Build
      run: cd apps/pass-summary-api && mvn clean install

    - name: Test
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
      run: cd apps/pass-summary-api && ./run-tests-with-datadog.sh

  build-pass-image-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
          
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: apps/pass-image-api
        platforms: linux/amd64
        push: false
        build-args: |
          TARGETARCH=amd64

  build-pass-image-api-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Get the current commit SHA and repository URL (shortened)
      - name: Get Commit Info
        id: get_sha
        run: | 
          echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "COMMIT_SHA_FULL=$(git rev-parse HEAD)" >> $GITHUB_ENV

      # Run container build
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PASS_IMAGES_API }}
          tags: |
            latest
            ${{ env.COMMIT_SHA }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps/pass-image-api
          platforms: linux/arm64,linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT_SHA=${{ env.COMMIT_SHA_FULL }}
            GIT_REPOSITORY_URL=${{ env.REPOSITORY_URL }}
