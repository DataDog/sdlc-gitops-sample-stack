# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: PR Check

on:
  pull_request:
    branches: [ "main" ]

env:
  REPOSITORY_URL: github.com/${{ github.repository }}


jobs:

  build-pass-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: cd apps/pass-api && go build -v ./...

    - name: Test
      run: cd apps/pass-api && go test -v ./...

  build-pass-summary-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'

    - name: Build
      run: cd apps/pass-summary-api && mvn clean install

    - name: Test
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
      run: cd apps/pass-summary-api && ./run-tests-with-datadog.sh

  build-pass-image-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
          
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: apps/pass-image-api
        platforms: linux/amd64
        push: false
        build-args: |
          TARGETARCH=amd64
