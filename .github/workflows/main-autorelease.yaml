# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main Autorelease

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_SIMPLE_API: ${{ github.repository_owner }}/simple-api
  IMAGE_NAME_DOWNSTREAM_API: ${{ github.repository_owner }}/downstream-api

jobs:
  #
  # Builds the simple-api golang app
  #
  build-simple-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Get the current commit SHA (shortened)
      - name: Get Commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Set up Go environment and build/test
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: cd apps/simple-api && go build -v ./...

      - name: Test
        run: cd apps/simple-api && go test -v ./...

      # Run container build
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SIMPLE_API }}
          tags: |
            latest
            ${{ env.COMMIT_SHA }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps/simple-api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  #
  # Builds the downstream-api java/quarkus app
  #
  build-downstream-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Get the current commit SHA (shortened)
      - name: Get Commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Build
        run: cd apps/downstream-api && mvn clean install

      - name: Test
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
        run: cd apps/downstream-api && ./run-tests-with-datadog.sh

      # Run container build
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DOWNSTREAM_API }}
          tags: |
            latest
            ${{ env.COMMIT_SHA }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: apps/downstream-api
          file: apps/downstream-api/src/main/docker/Dockerfile.jvm
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-gitops-manifests:
    runs-on: ubuntu-latest
    needs:
      - build-simple-api
      - build-downstream-api
    permissions:
      contents: write
      id-token: write
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      # Get the current commit SHA (shortened)
      - name: Get Commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Configure Git user for the commit
      - name: Configure Git Identity
        run: |
          git config --global user.name "GitOps"
          git config --global user.email "gitops@localhost"

      # Update the dev branch using the script
      - name: Update Dev Branch
        run: |
          ./scripts/update_deploy_branch.sh ${{ env.COMMIT_SHA }} dev main
